<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name></display-name>


  <!-- character encoding start -->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <!-- character encoding end -->


  <!--spring config start-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!--spring config end-->

  <!-- LogBack start -->
  <context-param>
    <param-name>logbackConfigLocation</param-name>
    <param-value>classpath:/logback.xml</param-value>
  </context-param>
  <listener>
    <listener-class>ch.qos.logback.ext.spring.web.LogbackConfigListener</listener-class>
  </listener>
  <!-- LogBack end -->


  <!--springmvc dispatcher start-->
  <servlet>
    <servlet-name>dispatcherServlet</servlet-name>
    <servlet-class>
      org.springframework.web.servlet.DispatcherServlet
    </servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:applicationContext_servlet.xml</param-value>
    </init-param>
    <!-- 使系统在启动时装在servlet而不是第一个servlet被访问 -->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>dispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  <!--springmvc dispatcher end-->

  <!-- SSO 配置 start-->
  <!-- kisso 初始化，也可以选择 spring 注入初始化查看 resources/spring/servlet-context.xml
    <context-param>
      <param-name>kissoConfigLocation</param-name>
      <param-value>classpath:properties/sso.properties</param-value>
    </context-param>
    <listener>
      <listener-class>com.baomidou.KissoConfigListener</listener-class>
    </listener>
    -->

      <!-- SSOFilter 过滤器是一种权限拦截方式，演示咱们使用  spring 的拦截器、加注解、跳过权限拦截。
      <filter>
          <filter-name>SSOFilter</filter-name>
          <filter-class>com.baomidou.SSOFilter</filter-class>
          <init-param>
              <param-name>over.url</param-name>
              <param-value>/login;/verify;/static/</param-value>
          </init-param>
      </filter>
      <filter-mapping>
          <filter-name>SSOFilter</filter-name>
          <url-pattern>/*</url-pattern>
      </filter-mapping>
  -->
  <!--SSO 配置end-->

  <!-- 配置session过期时间120分钟 -->
  <session-config>
    <session-timeout>120</session-timeout>
  </session-config>

  <!--error page start-->
  <error-page>
    <error-code>400</error-code>
    <location>/WEB-INF/views/error/400.html</location>
  </error-page>
  <error-page>
    <error-code>404</error-code>
    <location>/WEB-INF/views/error/404.html</location>
  </error-page>
  <error-page>
    <error-code>500</error-code>
    <location>/WEB-INF/views/error/500.html</location>
  </error-page>
  <error-page>
    <error-code>405</error-code>
    <location>/WEB-INF/views/error/405.html</location>
  </error-page>
  <!--error page end-->

</web-app>